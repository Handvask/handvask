name: Pull-request main branch
on:
  pull_request:
    branches:
      - "main"
    paths:
      - "python_backend/**"
      - "minizinc/**"
      - "handvask_frontend/**"
jobs:
  frontend-pull_request-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Control if changes in frontend been made
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'handvask_frontend/**'
      - name: If no changes stop workflow
        if: steps.changes.outputs.frontend == 'false'
        run: |
          echo "No changes in frontend, stop workflow"
          exit 78
      - name: Build frontend image.
        id: "build-image"
        run: |
          cd handvask_frontend && \
          docker \
          compose \
          build
        env:
          REACT_APP_BACKEND_URL: "${{secrets.API_URL}}"
          ARTIFACT_LOCATION_FRONTEND: "${{secrets.ARTIFACT_LOCATION_FRONTEND}}"
        continue-on-error: true
      - name: Docker image build fail, exit.
        if: steps.build-image.outcome == 'failure'
        run: |
          docker \
          compose \
          logs
  backend-pull_request-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Control if changes in backend been made
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'python_backend/**'
      - name: If no changes stop workflow
        if: steps.changes.outputs.backend == 'false'
        run: |
          echo "No changes in backend, stop workflow"
          exit 78
      - name: run pytest
        run: |
          docker \
          build \
          -t handvask_backend_test \
          -f ./python_backend/Dockerfile.backend \
          ./python_backend
        continue-on-error: false
      - name: Build backend image.
        id: "build-image"
        run: |
          cd python_backend && \
          docker \
          compose \
          build
        env:
          DB_HOST: "${{secrets.DB_HOST}}"
          DB_USER: "${{secrets.DB_USER}}"
          DB_PASS: "${{secrets.DB_PASS}}"
          DB_NAME: "${{secrets.DB_NAME}}"
          HANDVASK_FRONTEND_ORIGIN: "*"
          ARTIFACT_LOCATION_BACKEND: "${{secrets.ARTIFACT_LOCATION_BACKEND}}"
        continue-on-error: true
      - name: Docker image build fail, exit.
        if: steps.build-image.outcome == 'failure'
        run: |
          docker \
          compose \
          logs
