name: "pipeline_1, test file"
on:
  push:
    branches:
      - "pipeline_1"
jobs:
  test-running-service:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: "auth"
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/383672682031/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
          service_account: "morten-service@handvask.iam.gserviceaccount.com"
      - name: Google Cloud Platform (GCP) CLI - gcloud  
        uses: actions-hub/gcloud@360.0.0
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
      # - name: gcloud
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     project_id: ${{ secrets.PROJECT_ID }}
      #     service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      #     export_default_credentials: true
      - name: Test 1
        run: |
          grep -rhE ^deb /etc/apt/sources.list* | grep "cloud-sdk"
      - name: Test 2
        run: |
          deb  [signed-by=/usr/share/keyrings/cloud.google.gpg]  https://packages.cloud.google.com/apt cloud-sdk main
      - name: Test 3
        run: |
          apt-get update
          apt-get install -y kubectl
      - name: Test 4
        run: |
          kubectl version --short --client
      - name: Check version
        run: |
          gke-gcloud-auth-plugin --version
      



      # - name: Test 1 - gcloud install gke-gcloud-auth-plugin
      #   run: |
      #     gcloud components install gke-gcloud-auth-plugin
      #   continue-on-error: True

  # frontend-image-build:
  #   needs: test-running-service
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Authenticate to Google Cloud
  #       id: "auth"
  #       uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: "projects/383672682031/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
  #         service_account: "morten-service@handvask.iam.gserviceaccount.com"
  #     - name: "Configure Docker to use the gcloud command-line tool as a credential helper"
  #       run: |
  #         gcloud \
  #         auth \
  #         configure-docker europe-north1-docker.pkg.dev
  #     - name: Docker-compose build frontend image.
  #       run: |
  #         cd handvask_frontend && \
  #         docker \
  #         compose \
  #         build
  #     - name: Tag DockerImage
  #       run: |
  #         docker \
  #         tag handvask-frontend-image ${{secrets.ARTIFACT_LOCATION_BACKEND}}:${{ github.sha }}
  #     - name: Push DockerImage
  #       run: |
  #         docker push ${{secrets.ARTIFACT_LOCATION_BACKEND}}:${{ github.sha }}
  # deploy-to-GKE:
  #   needs: frontend-image-build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Authenticate to Google Cloud
  #       id: "auth"
  #       uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: "projects/383672682031/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
  #         service_account: "morten-service@handvask.iam.gserviceaccount.com"
  #     - name: set compute region
  #       run: |
  #         gcloud \
  #         config \
  #         set compute/region europe-north1
  #     - name: "Configure Docker to use the gcloud command-line tool as a credential helper"
  #       run: | 
  #         gcloud \
  #         container \
  #         clusters \
  #         get-credentials handvask-cluster
  #     - name: kubectl apply for deployment
  #       run: |
  #         kubectl \
  #         apply \
  #         -f handvask_frontend/k8s/
  #     - name: Deploy to GKE
  #       run: |
  #         kubectl \
  #         set \
  #         image \
  #         deployment \
  #         handvask-frontend \
  #         handvask-frontend=${{secrets.ARTIFACT_LOCATION_BACKEND}}:${{ github.sha }}
  #         kubectl \
  #         rollout status deployment/handvask-frontend



